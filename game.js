class Game {
    constructor() {
        this.player = document.getElementById('player');
        this.gameField = document.getElementById('gameField');
        
        this.cellWidth = 100;
        this.cellHeight = 166.67;
        this.moveDelay = 180;
        
        this.gridX = 0;
        this.gridY = 0;
        
        this.keysPressed = {};
        this.moveInterval = null;
        this.isGameActive = false;
        
        this.init();
    }
    
    init() {
        console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä—ã...');
        
        // –ù–∞—á–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è
        this.gridX = 0;
        this.gridY = 0;
        this.updatePlayerPosition();
        
        // –í–µ—à–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞–ø—Ä—è–º—É—é –Ω–∞ document
        document.addEventListener('keydown', (e) => this.handleKeyDown(e));
        document.addEventListener('keyup', (e) => this.handleKeyUp(e));
        
        // –§–æ–∫—É—Å –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–µ
        document.addEventListener('click', () => {
            document.body.focus();
            console.log('–§–æ–∫—É—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç');
        });
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–æ–∫—É—Å —Å—Ä–∞–∑—É
        document.body.setAttribute('tabindex', '0');
        document.body.focus();
        
        this.isGameActive = true;
        console.log('‚úÖ –ò–≥—Ä–∞ –∞–∫—Ç–∏–≤–Ω–∞. –ü—Ä–æ–±—É–π—Ç–µ WASDQEZX');
    }
    
    handleKeyDown(e) {
        if (!this.isGameActive) return;
        
        const key = e.key.toLowerCase();
        console.log('KeyDown:', key);
        
        if (['w', 'a', 's', 'd', 'q', 'e', 'z', 'x'].includes(key)) {
            e.preventDefault();
            e.stopPropagation();
            
            if (!this.keysPressed[key]) {
                this.keysPressed[key] = true;
                this.movePlayer(key);
                
                if (!this.moveInterval) {
                    this.moveInterval = setInterval(() => {
                        this.continuousMove();
                    }, this.moveDelay);
                }
            }
        }
    }
    
    handleKeyUp(e) {
        if (!this.isGameActive) return;
        
        const key = e.key.toLowerCase();
        console.log('KeyUp:', key);
        
        if (this.keysPressed[key]) {
            delete this.keysPressed[key];
            
            if (Object.keys(this.keysPressed).length === 0 && this.moveInterval) {
                clearInterval(this.moveInterval);
                this.moveInterval = null;
            }
        }
    }
    
    continuousMove() {
        Object.keys(this.keysPressed).forEach(key => {
            this.movePlayer(key);
        });
    }
    
    movePlayer(key) {
        let newGridX = this.gridX;
        let newGridY = this.gridY;
        
        switch(key) {
            case 'w': newGridY--; break; // –í–≤–µ—Ä—Ö
            case 's': newGridY++; break; // –í–Ω–∏–∑
            case 'a': newGridX--; break; // –í–ª–µ–≤–æ
            case 'd': newGridX++; break; // –í–ø—Ä–∞–≤–æ
            case 'q': newGridX--; newGridY--; break; // ‚Üñ
            case 'e': newGridX++; newGridY--; break; // ‚Üó
            case 'z': newGridX--; newGridY++; break; // ‚Üô
            case 'x': newGridX++; newGridY++; break; // ‚Üò
        }
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥—Ä–∞–Ω–∏—Ü
        if (newGridX >= 0 && newGridX < 10 && newGridY >= 0 && newGridY < 6) {
            this.gridX = newGridX;
            this.gridY = newGridY;
            this.updatePlayerPosition();
            console.log(`‚úÖ –î–≤–∏–∂–µ–Ω–∏–µ ${key}: [${this.gridX}, ${this.gridY}]`);
        } else {
            console.log(`‚ùå –ó–∞ –≥—Ä–∞–Ω–∏—Ü–µ–π: ${key} ‚Üí [${newGridX}, ${newGridY}]`);
        }
    }
    
    updatePlayerPosition() {
        const pixelX = this.gridX * this.cellWidth;
        const pixelY = this.gridY * this.cellHeight;
        
        this.player.style.left = pixelX + 'px';
        this.player.style.top = pixelY + 'px';
    }
}

// –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã
window.addEventListener('load', () => {
    console.log('üìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
    window.game = new Game(); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
});

// –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
console.log('üîÑ –°–∫—Ä–∏–ø—Ç game.js –∑–∞–≥—Ä—É–∂–µ–Ω');
